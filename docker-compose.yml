services:
    db_coin:
        container_name: pg_coin
        image: postgres:17-alpine3.21
        environment:
            - POSTGRES_USER=m2i
            - POSTGRES_PASSWORD=test1234
            - POSTGRES_DB=db_coin
        volumes:
            -  './.db_coin:/var/lib/postgresql/data'
        ports:
            - '5432:5432'

    php_coin:
        container_name: php_coin
        build: ./.docker/php
        working_dir: /www/symfony
        volumes:
            - './symfony:/www/symfony'

    server_coin:
        container_name: server_coin
        image: nginx:1.27-alpine3.20
        working_dir: /www
        volumes:
            - './symfony:/www/symfony'
            - './.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
        ports:
            - '8080:80'

    sonarqube:
      image: sonarqube:lts
      ports:
        - "9000:9000"
      environment:
        - SONAR_JDBC_URL=jdbc:postgresql://sonardb:5432/sonardb
        - SONAR_JDBC_USERNAME=admin
        - SONAR_JDBC_PASSWORD=m2i
      depends_on:
        sonardb:
          condition: service_healthy
      volumes:
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
        - sonarqube_logs:/opt/sonarqube/logs

    sonardb:
      container_name: sonardb
      image: postgres:17-alpine3.21
      environment:
        - POSTGRES_USER=sonardb
        - POSTGRES_PASSWORD=sonardb
        - POSTGRES_DB=sonardb
      volumes:
        - './.sonardb:/var/lib/postgresql/data'
      ports:
        - '5432:5432'
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U sonardb" ]
        interval: 10s
        timeout: 5s
        retries: 5


volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: